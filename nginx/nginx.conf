# nginx.conf
user  nginx;
worker_processes  auto;

error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;

events {
    worker_connections  1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    sendfile        on;
    keepalive_timeout  65;

    # SSL settings (global defaults)
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers on;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;

    # -----------------------
    # Server block
    # -----------------------
    server {
        listen 443 ssl; 
        http2 on;
        server_name localhost;

        # ฝั่งเซิร์ฟเวอร์ (Public CA cert เช่น Let's Encrypt)
        ssl_certificate     /etc/nginx/tls/server.crt;
        ssl_certificate_key /etc/nginx/tls/server.key;

        # ฝั่งไคลเอนต์ (Client Certificate Authentication / mTLS)
        ssl_client_certificate /etc/nginx/tls/ca.crt; # รวม root + intermediate
        ssl_verify_client on;   # ใช้ 'optional' ถ้าอยากให้ cert เป็นทางเลือก
        ssl_verify_depth 2;

        # ส่งผลการตรวจ client cert ไป backend
        proxy_set_header X-Client-Verify $ssl_client_verify;
        proxy_set_header X-Client-DN     $ssl_client_s_dn;
        proxy_set_header X-SSL-Protocol  $ssl_protocol;
        proxy_set_header X-SSL-Cipher    $ssl_cipher;

        # โฟลเดอร์ไฟล์เว็บ
    root /usr/share/nginx/html;
    index index.html;

    # เสิร์ฟไฟล์ static โดยตรง + cache header
    location ~* \.(?:css|js|mjs|png|jpe?g|gif|svg|ico|webp|woff2?)$ {
      try_files $uri =404;
      access_log off;
      add_header Cache-Control "public, max-age=31536000, immutable";
    }

    # SPA fallback: ทุก path ที่ไม่ใช่ไฟล์จริง ให้ส่ง index.html
    location / {
      try_files $uri $uri/ /index.html;
      # ถ้าอยากป้องกันอ้างอิงจากอื่น (ทางเลือก)
      # add_header Referrer-Policy "strict-origin-when-cross-origin";
    }

        # error เมื่อ client cert ผิดพลาด
        error_page 495 496 = @cert_err;
        location @cert_err {
            return 403 "Valid client certificate required\n";
        }
    }
}
